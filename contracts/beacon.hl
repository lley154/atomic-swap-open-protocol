minting beacon

enum Redeemer { 
    Mint
    Burn 
}

// Contract parameters 
const VERSION: ByteArray = #
const OWNER_PKH: ByteArray = #
const ownerPKH: PubKeyHash = PubKeyHash::new(OWNER_PKH)


func main(redeemer: Redeemer, ctx: ScriptContext) -> Bool {
    print("VERSION: " + VERSION.show());
    redeemer.switch {
        Mint => {
            mph: MintingPolicyHash = ctx.get_current_minting_policy_hash();
            ctx.tx.minted.get_policy(mph).all( (_, amount: Int) -> Bool {
                    amount == 1
                }).trace("BTP2: ") &&
            ctx.tx.is_signed_by(ownerPKH).trace("BTP1: ")
        },
        Burn => { 
            mph: MintingPolicyHash = ctx.get_current_minting_policy_hash();
            ctx.tx.minted.get_policy(mph).all( (_, amount: Int) -> Bool {
                    amount == -1
                }).trace("BTP2: ") 
        }
    }
}